REFERENCIAS LIBRERIAS PYTHON

[1] TinyTag:

•	Read tags, length and IDv3 cover images of music files
•	supported formats
•	MP3 (ID3 v1, v1.1, v2.2, v2.3+)
•	Wave/RIFF
•	OGG
•	OPUS
•	FLAC
•	WMA
•	MP4/M4A/M4B
•	pure python
•	supports python 2.7 and 3.4 or higher
•	high test coverage
•	Just a few hundred lines of code (just include it in your project!)

tinytag only provides the minimum needed for reading MP3, OGG, OPUS, MP4, M4A, FLAC, WMA and Wave meta-data. It can determine track number, total tracks, title, artist, album, year, duration and more.
from tinytag import TinyTag
tag = TinyTag.get('/some/music.mp3')
print('This track is by %s.' % tag.artist)
print('It is %f seconds long.' % tag.duration)

List of possible attributes you can get with TinyTag:

tag.album         # album as string
tag.albumartist   # album artist as string
tag.artist        # artist name as string
tag.audio_offset  # number of bytes before audio data begins
tag.bitrate       # bitrate in kBits/s
tag.comment       # file comment as string
tag.composer      # composer as string 
tag.disc          # disc number
tag.disc_total    # the total number of discs
tag.duration      # duration of the song in seconds
tag.filesize      # file size in bytes
tag.genre         # genre as string
tag.samplerate    # samples per second
tag.title         # title of the song
tag.track         # track number as string
tag.track_total   # total number of tracks as string
tag.year          # year or data as string



* Comando para ver puertos ocupados:
netstat  







REFRENCIAS BIBLIOGRAFICAS PYTHON

libreria TinyTag
[1] https://pypi.org/project/tinytag/

enviar archivos RPC 
[2] https://stackoverflow.com/questions/9099174/send-file-from-client-to-server-using-xmlrpc

leer archivos
[3]https://j2logo.com/python/listar-directorio-en-python/#listar-listdir